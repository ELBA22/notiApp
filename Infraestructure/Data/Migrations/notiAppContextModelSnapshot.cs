// <auto-generated />
using System;
using Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Data.Migrations
{
    [DbContext(typeof(notiAppContext))]
    partial class notiAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Entities.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DesAccion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("Core.Entities.BlockChain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AuditoriasId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("HilosRespuestasId")
                        .HasColumnType("int");

                    b.Property<int>("IdAuditoria")
                        .HasColumnType("int");

                    b.Property<int>("IdHiloRespu")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoNotificacion")
                        .HasColumnType("int");

                    b.Property<int?>("TipoNotificacionesId")
                        .HasColumnType("int");

                    b.Property<string>("hashGenerado")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AuditoriasId");

                    b.HasIndex("HilosRespuestasId");

                    b.HasIndex("TipoNotificacionesId");

                    b.ToTable("BlockChains");
                });

            modelBuilder.Entity("Core.Entities.EstadovsNotificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreEstado")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EstadoNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.Formato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreFormato")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Formatos");
                });

            modelBuilder.Entity("Core.Entities.GenericovsSubmodulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMaestrovsSubmodulos")
                        .HasColumnType("int");

                    b.Property<int>("IdPermisoGenerico")
                        .HasColumnType("int");

                    b.Property<int>("IdRoles")
                        .HasColumnType("int");

                    b.Property<int?>("MaestrosvsSubmodulosId")
                        .HasColumnType("int");

                    b.Property<int?>("PermisosGenericosId")
                        .HasColumnType("int");

                    b.Property<int?>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaestrosvsSubmodulosId");

                    b.HasIndex("PermisosGenericosId");

                    b.HasIndex("RolesId");

                    b.ToTable("GenericosvsSubmodulos");
                });

            modelBuilder.Entity("Core.Entities.HiloRespu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreTipo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("HilosRepuestas");
                });

            modelBuilder.Entity("Core.Entities.MMaestro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreModulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ModulosMaestros");
                });

            modelBuilder.Entity("Core.Entities.MNotificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AsuntoNotificacion")
                        .HasColumnType("longtext");

                    b.Property<int?>("EstadosvsNotificacionesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FormatosId")
                        .HasColumnType("int");

                    b.Property<int?>("HiloRespuestasId")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoNotificacion")
                        .HasColumnType("int");

                    b.Property<int>("IdFormato")
                        .HasColumnType("int");

                    b.Property<int>("IdHiloRespu")
                        .HasColumnType("int");

                    b.Property<int>("IdRadicado")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoNotificacion")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoRequerimiento")
                        .HasColumnType("int");

                    b.Property<int?>("RadicadosId")
                        .HasColumnType("int");

                    b.Property<string>("TextoNotificacion")
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoNotificacionesId")
                        .HasColumnType("int");

                    b.Property<int?>("TiposRequerimientosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadosvsNotificacionesId");

                    b.HasIndex("FormatosId");

                    b.HasIndex("HiloRespuestasId");

                    b.HasIndex("RadicadosId");

                    b.HasIndex("TipoNotificacionesId");

                    b.HasIndex("TiposRequerimientosId");

                    b.ToTable("ModulosNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.MaestrovsSubmodulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdModuloMaestro")
                        .HasColumnType("int");

                    b.Property<int>("IdSubmodulo")
                        .HasColumnType("int");

                    b.Property<int?>("ModulosMaestrosId")
                        .HasColumnType("int");

                    b.Property<int?>("SubmodulosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModulosMaestrosId");

                    b.HasIndex("SubmodulosId");

                    b.ToTable("MaestrosvsSubmodulos");
                });

            modelBuilder.Entity("Core.Entities.PermisoGenerico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombrPermiso")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PermisosGenericos");
                });

            modelBuilder.Entity("Core.Entities.Radicado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Radicados");
                });

            modelBuilder.Entity("Core.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Core.Entities.RolvsMaestro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMMaestro")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int?>("ModulosMaestrosId")
                        .HasColumnType("int");

                    b.Property<int?>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModulosMaestrosId");

                    b.HasIndex("RolesId");

                    b.ToTable("RolesvsMaestros");
                });

            modelBuilder.Entity("Core.Entities.Submodulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreSubModulo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Submodulos");
                });

            modelBuilder.Entity("Core.Entities.TipoNotificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreTipo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.TipoRequerimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoRequerimientos");
                });

            modelBuilder.Entity("Core.Entities.BlockChain", b =>
                {
                    b.HasOne("Core.Entities.Auditoria", "Auditorias")
                        .WithMany("BlockChains")
                        .HasForeignKey("AuditoriasId");

                    b.HasOne("Core.Entities.HiloRespu", "HilosRespuestas")
                        .WithMany("BlockChains")
                        .HasForeignKey("HilosRespuestasId");

                    b.HasOne("Core.Entities.TipoNotificacion", "TipoNotificaciones")
                        .WithMany("BlockChains")
                        .HasForeignKey("TipoNotificacionesId");

                    b.Navigation("Auditorias");

                    b.Navigation("HilosRespuestas");

                    b.Navigation("TipoNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.GenericovsSubmodulo", b =>
                {
                    b.HasOne("Core.Entities.MaestrovsSubmodulo", "MaestrosvsSubmodulos")
                        .WithMany("GenericovsSubmodulos")
                        .HasForeignKey("MaestrosvsSubmodulosId");

                    b.HasOne("Core.Entities.PermisoGenerico", "PermisosGenericos")
                        .WithMany("GenericovsSubmodulos")
                        .HasForeignKey("PermisosGenericosId");

                    b.HasOne("Core.Entities.Rol", "Roles")
                        .WithMany("GenericovsSubmodulos")
                        .HasForeignKey("RolesId");

                    b.Navigation("MaestrosvsSubmodulos");

                    b.Navigation("PermisosGenericos");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Core.Entities.MNotificacion", b =>
                {
                    b.HasOne("Core.Entities.EstadovsNotificacion", "EstadosvsNotificaciones")
                        .WithMany("ModuloNotificaciones")
                        .HasForeignKey("EstadosvsNotificacionesId");

                    b.HasOne("Core.Entities.Formato", "Formatos")
                        .WithMany("ModuloNotificaciones")
                        .HasForeignKey("FormatosId");

                    b.HasOne("Core.Entities.HiloRespu", "HiloRespuestas")
                        .WithMany("ModuloNotificaciones")
                        .HasForeignKey("HiloRespuestasId");

                    b.HasOne("Core.Entities.Radicado", "Radicados")
                        .WithMany("ModuloNotificaciones")
                        .HasForeignKey("RadicadosId");

                    b.HasOne("Core.Entities.TipoNotificacion", "TipoNotificaciones")
                        .WithMany("ModuloNotificaciones")
                        .HasForeignKey("TipoNotificacionesId");

                    b.HasOne("Core.Entities.TipoRequerimiento", "TiposRequerimientos")
                        .WithMany("ModuloNotificaciones")
                        .HasForeignKey("TiposRequerimientosId");

                    b.Navigation("EstadosvsNotificaciones");

                    b.Navigation("Formatos");

                    b.Navigation("HiloRespuestas");

                    b.Navigation("Radicados");

                    b.Navigation("TipoNotificaciones");

                    b.Navigation("TiposRequerimientos");
                });

            modelBuilder.Entity("Core.Entities.MaestrovsSubmodulo", b =>
                {
                    b.HasOne("Core.Entities.MMaestro", "ModulosMaestros")
                        .WithMany("MaestrovsSubmodulos")
                        .HasForeignKey("ModulosMaestrosId");

                    b.HasOne("Core.Entities.Submodulo", "Submodulos")
                        .WithMany("MaestrovsSubmodulos")
                        .HasForeignKey("SubmodulosId");

                    b.Navigation("ModulosMaestros");

                    b.Navigation("Submodulos");
                });

            modelBuilder.Entity("Core.Entities.RolvsMaestro", b =>
                {
                    b.HasOne("Core.Entities.MMaestro", "ModulosMaestros")
                        .WithMany("RolesvsMaestros")
                        .HasForeignKey("ModulosMaestrosId");

                    b.HasOne("Core.Entities.Rol", "Roles")
                        .WithMany("RolesvsMaestros")
                        .HasForeignKey("RolesId");

                    b.Navigation("ModulosMaestros");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Core.Entities.Auditoria", b =>
                {
                    b.Navigation("BlockChains");
                });

            modelBuilder.Entity("Core.Entities.EstadovsNotificacion", b =>
                {
                    b.Navigation("ModuloNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.Formato", b =>
                {
                    b.Navigation("ModuloNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.HiloRespu", b =>
                {
                    b.Navigation("BlockChains");

                    b.Navigation("ModuloNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.MMaestro", b =>
                {
                    b.Navigation("MaestrovsSubmodulos");

                    b.Navigation("RolesvsMaestros");
                });

            modelBuilder.Entity("Core.Entities.MaestrovsSubmodulo", b =>
                {
                    b.Navigation("GenericovsSubmodulos");
                });

            modelBuilder.Entity("Core.Entities.PermisoGenerico", b =>
                {
                    b.Navigation("GenericovsSubmodulos");
                });

            modelBuilder.Entity("Core.Entities.Radicado", b =>
                {
                    b.Navigation("ModuloNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.Rol", b =>
                {
                    b.Navigation("GenericovsSubmodulos");

                    b.Navigation("RolesvsMaestros");
                });

            modelBuilder.Entity("Core.Entities.Submodulo", b =>
                {
                    b.Navigation("MaestrovsSubmodulos");
                });

            modelBuilder.Entity("Core.Entities.TipoNotificacion", b =>
                {
                    b.Navigation("BlockChains");

                    b.Navigation("ModuloNotificaciones");
                });

            modelBuilder.Entity("Core.Entities.TipoRequerimiento", b =>
                {
                    b.Navigation("ModuloNotificaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
